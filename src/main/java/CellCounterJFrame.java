import java.awt.Color;
import java.io.File;

import javax.swing.JColorChooser;
import javax.swing.JFileChooser;




/**
 *
 * @author maryana
 */
public class CellCounterJFrame extends javax.swing.JFrame implements CellCounterDialog{

    /**
     * Creates new form CellCounterJFrame
     */
	
	private UCSF_Cell_Counter app;
	
    public CellCounterJFrame(UCSF_Cell_Counter plugin){
    	initComponents();
        initGroupSelections();
    	
    	this.app = plugin;
    }
    public CellCounterJFrame() {
        initComponents();
        initGroupSelections();
    }
    
    private void initGroupSelections(){
        groupSegMethod.add(radioEM);
        groupSegMethod.add(radioSVM);
        groupSegMethod.add(radioDL);
        groupSegMethod.setSelected(radioDL.getModel(), true);
        
        groupSelectROI.add(radioSelectRED);
        groupSelectROI.add(radioSelectGREEN);
        groupSelectROI.add(radioSelectOVER);
        groupSelectROI.add(radioSelectNUCLEI);
        groupSelectROI.setSelected(radioSelectRED.getModel(), true);
        
        comboWSize.setSelectedIndex(1);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupSelectROI = new javax.swing.ButtonGroup();
        groupSegMethod = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        totalCellCount = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        rCellCount = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        gCellCount = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        rgCellCount = new javax.swing.JTextField();
        radioSelectRED = new javax.swing.JRadioButton();
        radioSelectGREEN = new javax.swing.JRadioButton();
        radioSelectOVER = new javax.swing.JRadioButton();
        jButtonPickColorRED = new javax.swing.JButton();
        jButtonPickColorGREEN = new javax.swing.JButton();
        jButtonPickColorOVER = new javax.swing.JButton();
        jButtonClearRED = new javax.swing.JButton();
        jButtonClearGreen = new javax.swing.JButton();
        jButtonClearOver = new javax.swing.JButton();
        jButtonClearAll = new javax.swing.JButton();
        radioEM = new javax.swing.JRadioButton();
        radioSVM = new javax.swing.JRadioButton();
        jButtonOK = new javax.swing.JButton();
        radioDL = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        comboWSize = new javax.swing.JComboBox();
        jSeparator3 = new javax.swing.JSeparator();
        jCheckRed = new javax.swing.JCheckBox();
        jCheckGreen = new javax.swing.JCheckBox();
        jCheckOver = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        nCellCount = new javax.swing.JTextField();
        jButtonPickColorNuclei = new javax.swing.JButton();
        jButtonClearNuclei = new javax.swing.JButton();
        jCheckNuclei = new javax.swing.JCheckBox();
        radioSelectNUCLEI = new javax.swing.JRadioButton();
        jMenuBar = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jItemOpen = new javax.swing.JMenuItem();
        jItemSaveAs = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Total count:");

        totalCellCount.setEditable(false);
        totalCellCount.setToolTipText("");
        totalCellCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalCellCountActionPerformed(evt);
            }
        });

        jLabel8.setText("Red:");

        rCellCount.setEditable(false);

        jLabel9.setText("Green:");

        gCellCount.setEditable(false);
        gCellCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gCellCountActionPerformed(evt);
            }
        });

        jLabel10.setText("Overlapping:");

        rgCellCount.setEditable(false);

        radioSelectRED.setSelected(true);
        radioSelectRED.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSelectREDActionPerformed(evt);
            }
        });

        radioSelectGREEN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSelectGREENActionPerformed(evt);
            }
        });

        radioSelectOVER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSelectOVERActionPerformed(evt);
            }
        });

        jButtonPickColorRED.setIcon(new javax.swing.ImageIcon(getClass().getResource("color_wheel.png"))); // NOI18N
        jButtonPickColorRED.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPickColorREDActionPerformed(evt);
            }
        });

        jButtonPickColorGREEN.setIcon(new javax.swing.ImageIcon(getClass().getResource("color_wheel.png"))); // NOI18N
        jButtonPickColorGREEN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPickColorGREENActionPerformed(evt);
            }
        });

        jButtonPickColorOVER.setIcon(new javax.swing.ImageIcon(getClass().getResource("color_wheel.png"))); // NOI18N
        jButtonPickColorOVER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPickColorOVERActionPerformed(evt);
            }
        });

        jButtonClearRED.setText("Clear");
        jButtonClearRED.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearREDActionPerformed(evt);
            }
        });

        jButtonClearGreen.setText("Clear");
        jButtonClearGreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearGreenActionPerformed(evt);
            }
        });

        jButtonClearOver.setText("Clear");
        jButtonClearOver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearOverActionPerformed(evt);
            }
        });

        jButtonClearAll.setText("Clear All");
        jButtonClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearAllActionPerformed(evt);
            }
        });

        radioEM.setText("EM");

        radioSVM.setText("SVM");

        jButtonOK.setText("OK");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        radioDL.setText("DL");
        radioDL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioDLActionPerformed(evt);
            }
        });

        jLabel2.setText("window size");

        comboWSize.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5 px", "7 px", "9 px", "11 px", "13 px", "15 px" }));

        jCheckRed.setSelected(true);
        jCheckRed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckRedActionPerformed(evt);
            }
        });

        jCheckGreen.setSelected(true);
        jCheckGreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckGreenActionPerformed(evt);
            }
        });

        jCheckOver.setSelected(true);
        jCheckOver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckOverActionPerformed(evt);
            }
        });

        jLabel3.setText("Nuclei:");

        nCellCount.setEditable(false);
        nCellCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nCellCountActionPerformed(evt);
            }
        });

        jButtonPickColorNuclei.setIcon(new javax.swing.ImageIcon(getClass().getResource("color_wheel.png"))); // NOI18N
        jButtonPickColorNuclei.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPickColorNucleiActionPerformed(evt);
            }
        });

        jButtonClearNuclei.setText("Clear");
        jButtonClearNuclei.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearNucleiActionPerformed(evt);
            }
        });

        jCheckNuclei.setSelected(true);
        jCheckNuclei.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckNucleiActionPerformed(evt);
            }
        });

        radioSelectNUCLEI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSelectNUCLEIActionPerformed(evt);
            }
        });

        jMenuFile.setText("File");

        jItemOpen.setText("Open...");
        jItemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jItemOpenActionPerformed(evt);
            }
        });
        jMenuFile.add(jItemOpen);

        jItemSaveAs.setText("Save as...");
        jItemSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jItemSaveAsActionPerformed(evt);
            }
        });
        jMenuFile.add(jItemSaveAs);

        jMenuBar.add(jMenuFile);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(jSeparator2))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radioSelectRED)
                                    .addComponent(radioSelectGREEN)
                                    .addComponent(radioSelectOVER))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckRed)
                                    .addComponent(jCheckGreen)
                                    .addComponent(jCheckOver)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(radioSelectNUCLEI)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckNuclei)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rCellCount, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonPickColorRED))
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(nCellCount, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(gCellCount, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rgCellCount, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(jButtonClearAll)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonPickColorGREEN)
                                    .addComponent(jButtonPickColorOVER)
                                    .addComponent(jButtonPickColorNuclei))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButtonClearGreen, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                                    .addComponent(jButtonClearRED, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonClearOver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jButtonClearNuclei, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jSeparator3))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(comboWSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(radioEM)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonOK, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(radioSVM)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(radioDL))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(totalCellCount, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalCellCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(jButtonClearOver))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel8)
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioSelectRED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rCellCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonPickColorRED)
                                .addComponent(jCheckRed)
                                .addComponent(jButtonClearRED)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(gCellCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jCheckGreen))
                            .addComponent(radioSelectGREEN)
                            .addComponent(jButtonPickColorGREEN))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radioSelectOVER)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(rgCellCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jCheckOver))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jButtonPickColorOVER))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jButtonClearGreen)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nCellCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonClearNuclei))
                    .addComponent(jButtonPickColorNuclei)
                    .addComponent(jCheckNuclei)
                    .addComponent(radioSelectNUCLEI))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonClearAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboWSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioEM)
                    .addComponent(radioSVM)
                    .addComponent(radioDL))
                .addGap(4, 4, 4)
                .addComponent(jButtonOK)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   
    
    private void totalCellCountActionPerformed(java.awt.event.ActionEvent evt) {
    }

    private void gCellCountActionPerformed(java.awt.event.ActionEvent evt) {
    }

    private void radioDLActionPerformed(java.awt.event.ActionEvent evt) {
    }

    private void jCheckRedActionPerformed(java.awt.event.ActionEvent evt) {
    	if(jCheckRed.isSelected()){
    		this.app.showROI(Consts.ROI_RED);
    	}else{
    		this.app.hideROI(Consts.ROI_RED);
    	}
    }

    private void jButtonPickColorNucleiActionPerformed(java.awt.event.ActionEvent evt) {
    	this.changeColor(Consts.ROI_NUCLEI);
    }

    private void nCellCountActionPerformed(java.awt.event.ActionEvent evt) {
    }

    private void jButtonClearNucleiActionPerformed(java.awt.event.ActionEvent evt) {
        this.app.clearPoints(Consts.ROI_NUCLEI);
    }

    private void radioSelectNUCLEIActionPerformed(java.awt.event.ActionEvent evt) {
    	this.app.setSelectedROI(Consts.ROI_NUCLEI);
    }

    private void jCheckGreenActionPerformed(java.awt.event.ActionEvent evt) {
    	if(jCheckGreen.isSelected()){
    		this.app.showROI(Consts.ROI_GREEN);
    	}else{
    		this.app.hideROI(Consts.ROI_GREEN);
    	}
    }

    private void jCheckOverActionPerformed(java.awt.event.ActionEvent evt) {
    	if(jCheckOver.isSelected()){
    		this.app.showROI(Consts.ROI_OVERLAP);
    	}else{
    		this.app.hideROI(Consts.ROI_OVERLAP);
    	}
    }

    private void jCheckNucleiActionPerformed(java.awt.event.ActionEvent evt) {
    	if(jCheckNuclei.isSelected()){
    		this.app.showROI(Consts.ROI_NUCLEI);
    	}else{
    		this.app.hideROI(Consts.ROI_NUCLEI);
    	}
    }

    private void jItemSaveAsActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // Load serialized points
    	JFileChooser fc = new JFileChooser();
    	int returnVal = fc.showOpenDialog(CellCounterJFrame.this);
    	if (returnVal == JFileChooser.APPROVE_OPTION) {
             File file = fc.getSelectedFile();
             this.app.saveUCSFCellCounterData(file);
        }
    }

    private void jItemOpenActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // Load serialized points
    	JFileChooser fc = new JFileChooser();
    	int returnVal = fc.showOpenDialog(CellCounterJFrame.this);
    	if (returnVal == JFileChooser.APPROVE_OPTION) {
             File file = fc.getSelectedFile();
             this.app.loadUCSFCellCounterData(file);
        }
    }

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {                                          
    	//System.out.println("OK pressed");
    	if(groupSegMethod.getSelection().equals(radioSVM.getModel())){
    		this.app.setSegMethod(Consts.SVM);
    	}else if(groupSegMethod.getSelection().equals(radioDL.getModel())){
    		this.app.setSegMethod(Consts.DL);
    	}else{
    		this.app.setSegMethod(Consts.EM);
    	}
    	this.app.process();
    }

    private void jButtonClearREDActionPerformed(java.awt.event.ActionEvent evt) {                                                
        app.clearPoints(Consts.ROI_RED);
    }

    private void jButtonClearGreenActionPerformed(java.awt.event.ActionEvent evt) {                                                  
    	app.clearPoints(Consts.ROI_GREEN);
    }

    private void jButtonClearOverActionPerformed(java.awt.event.ActionEvent evt) {                                                 
    	app.clearPoints(Consts.ROI_OVERLAP);
    }

    private void jButtonClearAllActionPerformed(java.awt.event.ActionEvent evt) {                                                
    	app.clearPoints(Consts.ROI_RED);
    	app.clearPoints(Consts.ROI_GREEN);
    	app.clearPoints(Consts.ROI_OVERLAP);
    	app.clearPoints(Consts.ROI_NUCLEI);
        
    }

    private void jButtonPickColorREDActionPerformed(java.awt.event.ActionEvent evt) {                                                    
    	this.changeColor(Consts.ROI_RED);
    }

    private void jButtonPickColorGREENActionPerformed(java.awt.event.ActionEvent evt) {                                                      
    	this.changeColor(Consts.ROI_GREEN);
    }

    private void jButtonPickColorOVERActionPerformed(java.awt.event.ActionEvent evt) {                                                     
    	this.changeColor(Consts.ROI_OVERLAP);
    }

    private void radioSelectREDActionPerformed(java.awt.event.ActionEvent evt) {                                               
        this.app.setSelectedROI(Consts.ROI_RED);
    }

    private void radioSelectGREENActionPerformed(java.awt.event.ActionEvent evt) {                                                 
    	this.app.setSelectedROI(Consts.ROI_GREEN);
    }

    private void radioSelectOVERActionPerformed(java.awt.event.ActionEvent evt) {                                                
    	this.app.setSelectedROI(Consts.ROI_OVERLAP);
    }
    
//    private void radioEMActionPerformed(java.awt.event.ActionEvent evt) {                                                
//    	this.app.setUseSVM(false);
//    }
//    
//    private void radioSVMActionPerformed(java.awt.event.ActionEvent evt) {                                                
//    	this.app.setUseSVM(true);
//    }

    /**
     * @param args the command line arguments
     */
    public static void initPluginWindow() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CellCounterJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CellCounterJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CellCounterJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CellCounterJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CellCounterJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox comboWSize;
    private javax.swing.JTextField gCellCount;
    private javax.swing.ButtonGroup groupSegMethod;
    private javax.swing.ButtonGroup groupSelectROI;
    private javax.swing.JButton jButtonClearAll;
    private javax.swing.JButton jButtonClearGreen;
    private javax.swing.JButton jButtonClearNuclei;
    private javax.swing.JButton jButtonClearOver;
    private javax.swing.JButton jButtonClearRED;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JButton jButtonPickColorGREEN;
    private javax.swing.JButton jButtonPickColorNuclei;
    private javax.swing.JButton jButtonPickColorOVER;
    private javax.swing.JButton jButtonPickColorRED;
    private javax.swing.JCheckBox jCheckGreen;
    private javax.swing.JCheckBox jCheckNuclei;
    private javax.swing.JCheckBox jCheckOver;
    private javax.swing.JCheckBox jCheckRed;
    private javax.swing.JMenuItem jItemOpen;
    private javax.swing.JMenuItem jItemSaveAs;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField nCellCount;
    private javax.swing.JTextField rCellCount;
    private javax.swing.JRadioButton radioDL;
    private javax.swing.JRadioButton radioEM;
    private javax.swing.JRadioButton radioSVM;
    private javax.swing.JRadioButton radioSelectGREEN;
    private javax.swing.JRadioButton radioSelectNUCLEI;
    private javax.swing.JRadioButton radioSelectOVER;
    private javax.swing.JRadioButton radioSelectRED;
    private javax.swing.JTextField rgCellCount;
    private javax.swing.JTextField totalCellCount;
    // End of variables declaration//GEN-END:variables


	    /*
	     * edited
	     */
	public void setTotalCellCount(int count){
	    this.totalCellCount.setText(count+"");
	}
	
	public void setRedCellCount(int count){
	    this.rCellCount.setText(count+"");
	}
	    
	public void setGreenCellCount(int count){
	    this.gCellCount.setText(count+"");
	}
	
	public void setOverlapCellCount(int count){
	    this.rgCellCount.setText(count+"");   
	}
	
	public void setNucleiCellCount(int count){
	    this.nCellCount.setText(count+"");   
	}
	
	public void setCounters(CellCount cObj){

		int redC = cObj.getRedCells() + cObj.getOverlapCells();
		int greenC = cObj.getGreenCells() + cObj.getOverlapCells();
		int overC = cObj.getOverlapCells();
		int nucleiC = cObj.getNucleiCells();
		int totalC = cObj.getGreenCells() + cObj.getRedCells() + 
					 cObj.getOverlapCells() + cObj.getNucleiCells();
		
		this.rCellCount.setText(redC+" (red: " + cObj.getRedCells() +")");
		this.gCellCount.setText(greenC+" (green: " + cObj.getGreenCells() +")");
		this.nCellCount.setText(nucleiC+"");
		this.rgCellCount.setText(overC+"");
		
		this.totalCellCount.setText(totalC+"");
	}
	
	private void changeColor(int r){
    	Color newColor = JColorChooser.showDialog(null, "Pick ROI color", this.app.getColorROI(r));
    	this.app.setNewROIColor(r,newColor);
	}

	public int getWindowSizeSel() {
		return comboWSize.getSelectedIndex();
	}

}
